{"version":3,"sources":["components/Header.js","context/AppReducer.js","components/Alert.js","context/GlobalState.js","utils/format.js","components/Balance.js","components/Gross.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","newTransactions","type","transactions","payload","isLoading","filter","transaction","_id","console","log","alertMessage","message","alertType","showAlert","Alert","closeAlert","useEffect","setTimeout","className","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","removeTransaction","id","a","axios","delete","openAlert","addTransaction","trans","post","JSON","stringify","headers","data","getTransactions","get","Provider","value","numberWithCommas","x","toString","replace","Balance","useContext","useState","balance","setBalance","total","reduce","tran","parseFloat","amount","Math","abs","toFixed","Gross","income","setIncome","expense","setExpense","plus","minus","Transaction","title","onClick","TransactionList","length","map","AddTransaction","setTitle","setAmount","onSubmit","e","preventDefault","isNaN","htmlFor","name","placeholder","onChange","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82963a30.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function Header() {\r\n  return <header>Expense Tracker</header>;\r\n}\r\n","const AppReducer = (state, action) => {\r\n  let newTransactions = [];\r\n\r\n  switch (action.type) {\r\n    case \"ADD_TRAN\":\r\n      newTransactions = [...state.transactions, action.payload];\r\n      return { ...state, transactions: newTransactions, isLoading: false };\r\n\r\n    case \"REMOVE_TRAN\":\r\n      newTransactions = state.transactions.filter(\r\n        (transaction) => transaction._id !== action.payload\r\n      );\r\n      console.log({ newTransactions });\r\n      return { ...state, transactions: newTransactions, isLoading: false };\r\n\r\n    case \"TRANSACTIONS\":\r\n      return { ...state, transactions: action.payload, isLoading: false };\r\n\r\n    case \"OPEN_ALERT\":\r\n      return {\r\n        ...state,\r\n        alertMessage: action.payload.message,\r\n        alertType: action.payload.type,\r\n        showAlert: true,\r\n      };\r\n    case \"CLOSE_ALERT\":\r\n      return {\r\n        ...state,\r\n        alertMessage: \"\",\r\n        alertType: \"\",\r\n        showAlert: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default AppReducer;\r\n","import React, { useEffect } from \"react\";\r\n\r\nexport default function Alert({ message, type, closeAlert }) {\r\n  console.log(\"I am the alert!!\");\r\n  useEffect(() => {\r\n    console.log({ type });\r\n    setTimeout(() => closeAlert(), 3000);\r\n  });\r\n  return <div className={`alert ${type && \"green\"}`}>{message}</div>;\r\n}\r\n","import React, {\r\n  createContext,\r\n  useReducer,\r\n  useEffect,\r\n  useCallback,\r\n} from \"react\";\r\nimport axios from \"axios\";\r\nimport AppReducer from \"./AppReducer\";\r\nimport Alert from \"../components/Alert\";\r\n\r\nconst initialState = {\r\n  transactions: [],\r\n  isLoading: true,\r\n  showAlert: false,\r\n  alertMessage: \"\",\r\n  alertType: false,\r\n};\r\n\r\nconst catchAsync =\r\n  (fn) =>\r\n  (...args) =>\r\n    fn(...args).catch((err) => console.log(\"err\", err));\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n  const removeTransaction = async (id) => {\r\n    try {\r\n      await axios.delete(`/api/v1/transaction/${id}`);\r\n      dispatch({ type: \"REMOVE_TRAN\", payload: id });\r\n      openAlert(\"Transaction Removed\", false);\r\n    } catch (err) {\r\n      console.log(\"Err\", err);\r\n    }\r\n  };\r\n\r\n  const addTransaction = async (trans) => {\r\n    try {\r\n      const { data } = await axios.post(\r\n        `/api/v1/transaction`,\r\n        JSON.stringify(trans),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      let { transaction } = data.data;\r\n      dispatch({ type: \"ADD_TRAN\", payload: transaction });\r\n      openAlert(\"Transaction Added\", true);\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n    }\r\n  };\r\n\r\n  const getTransactions = async () => {\r\n    try {\r\n      const { data } = await axios.get(`/api/v1/transactions`);\r\n      const { transactions } = data.data;\r\n      console.log(transactions);\r\n      dispatch({ type: \"TRANSACTIONS\", payload: transactions });\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"calling transaction again!!\");\r\n    getTransactions();\r\n  }, []);\r\n\r\n  const closeAlert = () => {\r\n    console.log(\"close alert!!\");\r\n    dispatch({ type: \"CLOSE_ALERT\" });\r\n  };\r\n\r\n  const openAlert = (message, type) => {\r\n    dispatch({ type: \"OPEN_ALERT\", payload: { message, type } });\r\n  };\r\n\r\n  console.log(\"re-rendering global state\");\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{\r\n        transactions: state.transactions,\r\n        removeTransaction,\r\n        addTransaction,\r\n        openAlert,\r\n        isLoading: state.isLoading,\r\n      }}\r\n    >\r\n      {state.showAlert && (\r\n        <Alert\r\n          message={state.alertMessage}\r\n          type={state.alertType}\r\n          closeAlert={closeAlert}\r\n        />\r\n      )}\r\n\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  );\r\n};\r\n","export function numberWithCommas(x) {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport { numberWithCommas } from \"./../utils/format\";\r\n\r\nexport default function Balance() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const [balance, setBalance] = useState(0);\r\n  useEffect(() => {\r\n    const total = transactions.reduce(\r\n      (total, tran) => (total += parseFloat(tran.amount)),\r\n      0\r\n    );\r\n\r\n    setBalance(total);\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <section className=\"balance\">\r\n      <div className=\"head\">Your Balance:</div>\r\n      <main className={`${balance >= 0 ? \"green\" : \"red\"}`}>\r\n        ${numberWithCommas(Math.abs(balance).toFixed(2))}\r\n      </main>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function Gross() {\r\n  const { transactions } = useContext(GlobalContext);\r\n  const [income, setIncome] = useState(0);\r\n  const [expense, setExpense] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let plus = transactions.reduce((total, trans) => {\r\n      if (trans.amount > 0) {\r\n        total += trans.amount;\r\n      }\r\n      return total;\r\n    }, 0);\r\n    let minus = transactions.reduce((total, trans) => {\r\n      if (trans.amount < 0) {\r\n        total += trans.amount;\r\n      }\r\n      return total;\r\n    }, 0);\r\n    setIncome(plus);\r\n    setExpense(minus);\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <section className=\"gross\">\r\n      <div>\r\n        <div className=\"head\">Income</div>\r\n        <main className=\"green\">\r\n          ${numberWithCommas(Math.abs(income).toFixed(2))}\r\n        </main>\r\n      </div>\r\n      <div>\r\n        <div className=\"head\">Expense</div>\r\n        <main className=\"red\">\r\n          ${numberWithCommas(Math.abs(expense).toFixed(2))}\r\n        </main>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { numberWithCommas } from \"../utils/format\";\r\n\r\nexport default function Transaction({ _id, title, amount, removeTransaction }) {\r\n  return (\r\n    <div className={`historyCard ${amount > 0 ? \"green\" : \"red\"}`}>\r\n      <div className=\"head\">{title}</div>\r\n      <div className=\"amt\">\r\n        ${numberWithCommas(Math.abs(amount).toFixed(2))}\r\n      </div>\r\n      <button\r\n        className=\"historyCard-btn\"\r\n        onClick={() => removeTransaction(_id)}\r\n      >\r\n        X\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Transaction from \"./Transaction\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function TransactionList() {\r\n  const { transactions, removeTransaction, isLoading } =\r\n    useContext(GlobalContext);\r\n  console.log(transactions);\r\n  return (\r\n    <section className=\"history\">\r\n      <div className=\"head\">History</div>\r\n      <main>\r\n        {isLoading\r\n          ? \"Loading...\"\r\n          : transactions.length > 0\r\n          ? transactions.map((transaction) => (\r\n              <Transaction\r\n                key={transaction._id}\r\n                {...transaction}\r\n                removeTransaction={removeTransaction}\r\n              />\r\n            ))\r\n          : \"No transactions.\"}\r\n      </main>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nexport default function AddTransaction() {\r\n  const { addTransaction, openAlert } = useContext(GlobalContext);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (title === \"\" || amount === \"\") {\r\n      openAlert(\"Title or amount can't be empty.\", false);\r\n      return;\r\n    }\r\n    if (isNaN(amount)) {\r\n      openAlert(\"Please enter a valid amount.\", false);\r\n      return;\r\n    }\r\n    const transaction = {\r\n      amount: parseFloat(amount).toFixed(2),\r\n      title,\r\n    };\r\n    addTransaction(transaction);\r\n    setTitle(\"\");\r\n    setAmount(\"\");\r\n  };\r\n\r\n  return (\r\n    <section className=\"add\">\r\n      <div className=\"head\">Add Transaction</div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"title\" className=\"head\">\r\n          Title:\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"title\"\r\n          name=\"title\"\r\n          placeholder=\"What for? (e.g. Cash, Books, Food)\"\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          value={title}\r\n        />\r\n        <label htmlFor=\"amount\" className=\"head\">\r\n          Amount:\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"amount\"\r\n          name=\"amount\"\r\n          placeholder=\"(e.g. '-10.0':Expense,'+10.00':Income)\"\r\n          value={amount}\r\n          onChange={(e) => {\r\n            setAmount(e.target.value);\r\n          }}\r\n        />\r\n        <button type=\"submit\" className=\"btn\">\r\n          Add\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Header from \"./components/Header\";\r\nimport Balance from \"./components/Balance\";\r\nimport Gross from \"./components/Gross\";\r\nimport TramsactionList from \"./components/TransactionList\";\r\nimport AddTransaction from \"./components/AddTransaction\";\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <GlobalProvider>\r\n      <div className=\"app\">\r\n        <div className=\"tracker\">\r\n          <Header />\r\n          <Balance />\r\n          <Gross />\r\n          <TramsactionList />\r\n          <AddTransaction />\r\n        </div>\r\n      </div>\r\n    </GlobalProvider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}